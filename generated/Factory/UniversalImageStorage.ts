// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class UniversalImageStorage__getUniversalImageResultValue0Struct extends ethereum.Tuple {
  get imageURI(): string {
    return this[0].toString();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get imageHash(): Bytes {
    return this[3].toBytes();
  }
}

export class UniversalImageStorage extends ethereum.SmartContract {
  static bind(address: Address): UniversalImageStorage {
    return new UniversalImageStorage("UniversalImageStorage", address);
  }

  getProvenanceCount(imageHash: Bytes): BigInt {
    let result = super.call(
      "getProvenanceCount",
      "getProvenanceCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(imageHash)]
    );

    return result[0].toBigInt();
  }

  try_getProvenanceCount(imageHash: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getProvenanceCount",
      "getProvenanceCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(imageHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUniversalImage(
    imageHash: Bytes
  ): UniversalImageStorage__getUniversalImageResultValue0Struct {
    let result = super.call(
      "getUniversalImage",
      "getUniversalImage(bytes32):((string,address,uint256,bytes32))",
      [ethereum.Value.fromFixedBytes(imageHash)]
    );

    return changetype<
      UniversalImageStorage__getUniversalImageResultValue0Struct
    >(result[0].toTuple());
  }

  try_getUniversalImage(
    imageHash: Bytes
  ): ethereum.CallResult<
    UniversalImageStorage__getUniversalImageResultValue0Struct
  > {
    let result = super.tryCall(
      "getUniversalImage",
      "getUniversalImage(bytes32):((string,address,uint256,bytes32))",
      [ethereum.Value.fromFixedBytes(imageHash)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<UniversalImageStorage__getUniversalImageResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddUniversalImageCall extends ethereum.Call {
  get inputs(): AddUniversalImageCall__Inputs {
    return new AddUniversalImageCall__Inputs(this);
  }

  get outputs(): AddUniversalImageCall__Outputs {
    return new AddUniversalImageCall__Outputs(this);
  }
}

export class AddUniversalImageCall__Inputs {
  _call: AddUniversalImageCall;

  constructor(call: AddUniversalImageCall) {
    this._call = call;
  }

  get imageURI(): string {
    return this._call.inputValues[0].value.toString();
  }

  get creator(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get imageHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddUniversalImageCall__Outputs {
  _call: AddUniversalImageCall;

  constructor(call: AddUniversalImageCall) {
    this._call = call;
  }
}

export class DecrementProvenanceCountCall extends ethereum.Call {
  get inputs(): DecrementProvenanceCountCall__Inputs {
    return new DecrementProvenanceCountCall__Inputs(this);
  }

  get outputs(): DecrementProvenanceCountCall__Outputs {
    return new DecrementProvenanceCountCall__Outputs(this);
  }
}

export class DecrementProvenanceCountCall__Inputs {
  _call: DecrementProvenanceCountCall;

  constructor(call: DecrementProvenanceCountCall) {
    this._call = call;
  }

  get imageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class DecrementProvenanceCountCall__Outputs {
  _call: DecrementProvenanceCountCall;

  constructor(call: DecrementProvenanceCountCall) {
    this._call = call;
  }
}

export class IncrementProvenanceCountCall extends ethereum.Call {
  get inputs(): IncrementProvenanceCountCall__Inputs {
    return new IncrementProvenanceCountCall__Inputs(this);
  }

  get outputs(): IncrementProvenanceCountCall__Outputs {
    return new IncrementProvenanceCountCall__Outputs(this);
  }
}

export class IncrementProvenanceCountCall__Inputs {
  _call: IncrementProvenanceCountCall;

  constructor(call: IncrementProvenanceCountCall) {
    this._call = call;
  }

  get imageHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class IncrementProvenanceCountCall__Outputs {
  _call: IncrementProvenanceCountCall;

  constructor(call: IncrementProvenanceCountCall) {
    this._call = call;
  }
}
